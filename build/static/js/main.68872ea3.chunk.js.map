{"version":3,"sources":["Component/GetAll.js","Component/BetweenYears.js","Component/UpdateCoachName.js","Component/Home.js","serviceWorker.js","index.js"],"names":["GetAll","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","createAllTeams","bind","assertThisInitialized","react_default","a","createElement","id","children","Component","BetweenYears","yearsResult","state","data","_this2","url","concat","document","getElementById","value","fetch","method","then","response","json","error","console","log","array","length","setState","toConsumableArray","alert","Details","type","onClick","map","item","index","src_Component_GetAll","key","class","coach_name","team_name","years","details","country","date","UpdateCoachName","coachNameUpdate","coachData","headers","Content-Type","body","JSON","stringify","credentials","res","Status","Home","getAllTeams","betweenYears","updateCoachName","flag","getAll","showBetweenDates","loadInfo","i","src_Component_BetweenYears","src_Component_UpdateCoachName","Boolean","window","location","hostname","match","ReactDOM","render","src_Component_Home","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.68872ea3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './GetAll.css';\n\n\n\n\n\nclass GetAll extends Component {\n    constructor(props) {\n      super(props);\n      this.createAllTeams=this.createAllTeams.bind(this);\n    }\n     \n    createAllTeams(){\n        //alert(this.props.children.length);\n\n    }\n        \n    \n    render() {\n      return (<section id=\"outBox\"><section id=\"inBox\">{this.props.children[0]}<br></br>{this.props.children[1]}<br></br>{this.props.children[2]}<br></br>{this.props.children[3]}<br></br>{this.props.children[4]}<br></br>{this.props.children[5]}<br></br></section></section>)\n    }\n  }\n\n\n\nexport default GetAll","import React, { Component } from 'react';\nimport './BetweenYears.css';\nimport GetAll from './GetAll';\n\n\n\n\n\nclass BetweenYears extends Component {\n    constructor(props) {\n        super(props);\n  \n     \n       this.yearsResult=this.yearsResult.bind(this);\n       this.state={\n           data:[]\n       }\n\n       \n    }\n\n\n    yearsResult(){\n      \n        var proxy=`https://cors-anywhere.herokuapp.com/`;\n        var url=`https://newteamsapp2018.herokuapp.com/getTeamBetweenYears?from=${document.getElementById('yearStart').value}&to=${document.getElementById('yearEnd').value}`;\n        fetch(`${proxy}${url}`,{method: 'get' }  )\n        .then((response)=>{   \n            return response.json();\n    \n        },(error)=>{\n            console.log(error);\n        }).then((array)=>{\n           \n            if(array.length>0){\n                 this.setState({\n                     data:[...array]\n                 })\n\n            }else{\n                alert(array.Details);\n            }\n        })\n      \n    \n    }\n\n\n    render() {\n        return (\n\n        \n            <div id=\"formOut\">\n                <section id=\"formIn\">\n                        <form >\n                            <p>select lower rank</p>\n                            <input type=\"text\" id=\"yearStart\"></input>\n                            <br></br>\n                            <p>select high rank</p>\n                            <input type=\"text\" id=\"yearEnd\"></input>\n                            <br></br>\n                            \n                        </form>\n\n\n                        <button onClick={this.yearsResult}>click</button>\n\n                        <section>{this.state.data.map((item,index)=>{\n                            return <GetAll key={index}>{item.class}{item.coach_name}{item.team_name}{item.years}{item.details.country}{item.details.date}</GetAll>\n                        })}</section>\n                </section>\n            </div>\n        );\n    }\n}\n\n\n\nexport default BetweenYears","import React, { Component } from 'react';\nimport './UpdateCoachName.css';\n\n\n\nclass UpdateCoachName extends Component {\n    constructor(props) {\n        super(props);\n        this.coachNameUpdate=this.coachNameUpdate.bind(this);\n    }\n\n    coachNameUpdate(){\n     \n        var coachData={\n            team_name:document.getElementById('TeamName').value,\n            coach_name:document.getElementById('coachNewName').value\n        };\n\n        const proxy1=`https://cors-anywhere.herokuapp.com/`;\n        const url1=`https://newteamsapp2018.herokuapp.com/updateCoachName`;\n        console.log(`https://cors-anywhere.herokuapp.com/https://newteamsapp2018.herokuapp.com/updateCoachName`);\n        fetch(`${proxy1}${url1}`,{method: \"POST\",headers: {'Content-Type': 'application/json'},body: JSON.stringify(coachData),credentials: \"same-origin\"} )\n        .then((response)=>{\n           \n            return response.json();\n\n\n        },(error)=>{\n            alert(error);\n        }).then((res)=>{\n            if(res.Status==\"Succeed\"){\n                alert(\"coach name updated\");\n            }else{\n                alert(res.details);\n            }\n          \n        })\n      \n    }\n    \n\n    render() {\n        return (\n            \n            <div id=\"formOut\">\n                <section id=\"formIn\">\n                    <form >\n\n                                <p>Enter team name</p>\n                                 <input type=\"text\"  id=\"TeamName\"></input>\n                         \n\n                        <br></br>\n                                <p>Enter new coach name</p>\n                                  <input type=\"text\"  id=\"coachNewName\"></input>\n                        \n                        <br></br>\n                    </form>\n\n                     <button onClick={this.coachNameUpdate}>click</button>\n                 </section>\n        \n            </div>\n\n\n        );\n\n    }\n\n\n}\n\n\n\nexport default UpdateCoachName","import React, { Component } from 'react';\n\nimport './Home.css';\nimport GetAll from './GetAll';\nimport BetweenYears from './BetweenYears';\nimport UpdateCoachName from './UpdateCoachName';\n\n\n\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            getAllTeams: 1,\n            betweenYears: 0,\n            updateCoachName: 0,\n            data:[]\n           \n        }\n        this.flag=1;\n      \n        this.getAll=this.getAll.bind(this);\n        this.showBetweenDates=this.showBetweenDates.bind(this);\n        this.updateCoachName=this.updateCoachName.bind(this);\n        this.loadInfo=this.loadInfo.bind(this);\n\n    }\n\n \n\n    showBetweenDates(){\n\n        this.setState({\n            getAllTeams: 0,\n            betweenYears: 1,\n            updateCoachName: 0\n\n        })\n\n    }\n    getAll(){\n        fetch('https://cors-anywhere.herokuapp.com/https://newteamsapp2018.herokuapp.com/getAllTeams',{method: 'get'})\n        .then((response)=>{\n            return response.json();\n\n           \n        },(error)=>{\n            \n            console.log(error);\n        }).then((array)=>{\n           \n           \n            if(array.length>0)\n            {\n                this.setState({\n                    getAllTeams: 1,\n                    betweenYears: 0,\n                    updateCoachName: 0,\n                    data:[...array]\n               })  \n\n            }else{\n                alert(array.Details);\n            }\n               \n        })\n\n      \n    }\n    updateCoachName(){\n        this.setState({\n            getAllTeams: 0,\n            betweenYears: 0,\n            updateCoachName: 1\n        })\n\n    }\n\n    loadInfo(){\n        if(this.flag==1){\n            this.flag=0;\n            this.getAll();\n        }\n        if(this.state.getAllTeams===1){\n           return this.state.data.map((item,i)=><GetAll key={i}>{item.class}{item.coach_name}{item.team_name}{item.years}{item.details.country}{item.details.date}</GetAll>)\n        }else if(this.state.betweenYears===1){\n            return(<BetweenYears/>);\n        }else if(this.state.updateCoachName===1){\n            return(<UpdateCoachName/>);\n        }else{\n            return(<p></p>);\n        }\n\n    }\n\n    render() {\n        return (\n            <section id=\"page\">\n                <section id=\"topMenuOut\">\n                    <section  id=\"getAll\" onClick={this.getAll}>getAll</section>\n                    <section  id=\"showBetweenDates\" onClick={this.showBetweenDates}>showBetweenDates</section>\n                    <section  id=\"updateCoachName\" onClick={this.updateCoachName}>updateCoachName</section> \n                </section>\n                <section>{this.loadInfo()}</section>\n            </section>\n\n        );\n    }\n}\n\n\n\nexport default Home","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nimport Home from './Component/Home';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<Home />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}